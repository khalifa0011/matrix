@model matrixTest.Models.Product

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center">Edit Product</h1>

<hr />
<div class="row justify-content-center">
    <div class="col-md-4 bg-info">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" value="@ViewBag.selectedProduct.Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" value="@ViewBag.selectedProduct.Name" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select value="@ViewBag.selectedProduct.CategoryId" class="form-control" name="CategoryId" >
							@foreach (var category in ViewBag.categoryList)
							{
                                if(category.Id == ViewBag.selectedProduct.CategoryId)
								 {
                                 <option selected value="@category.Id">@category.Name</option>
                                  }
                                else
                                  {
								       <option  value="@category.Id">@category.Name</option>
                                  }
							}
						</select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="text-center">
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
